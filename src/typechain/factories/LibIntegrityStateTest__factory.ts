/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LibIntegrityStateTest,
  LibIntegrityStateTestInterface,
} from "../LibIntegrityStateTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "applyFn0",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "applyFn1",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "applyFn2",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "applyFn3",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "applyFn4",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "applyFn5",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "applyFn6",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "applyFn7",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "applyFn8",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n_",
        type: "uint256",
      },
    ],
    name: "applyFnN",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "finalStacks_",
        type: "uint256[]",
      },
    ],
    name: "ensureIntegrity",
    outputs: [
      {
        internalType: "uint256",
        name: "scratch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "contextScratch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackLength_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "SourceIndex",
        name: "sourceIndex_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumFinalStackIndex_",
        type: "uint256",
      },
    ],
    name: "ensureIntegrityTest",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackBottom_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "pop",
    outputs: [
      {
        internalType: "StackTop",
        name: "stackTopAfter_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackBottom_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n_",
        type: "uint256",
      },
    ],
    name: "pop",
    outputs: [
      {
        internalType: "StackTop",
        name: "stackTopAfter_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackBottom_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "popUnderflowCheck",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n_",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [
      {
        internalType: "StackTop",
        name: "stackTopAfter_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [
      {
        internalType: "StackTop",
        name: "stackTopAfter_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "syncStackMaxTop",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613455806100206000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063a9563063116100b2578063cc1c411911610081578063e9108ddf11610066578063e9108ddf1461026d578063f0025f5d1461029b578063fe41dc40146102ae57600080fd5b8063cc1c411914610247578063d14acfc31461025a57600080fd5b8063a9563063146101fb578063ad9af8111461020e578063c826b7ae14610221578063ca4e71b51461023457600080fd5b80636d130d96116101095780638fb90bc1116100ee5780638fb90bc1146101c2578063919de855146101d5578063a57e94cd146101e857600080fd5b80636d130d961461019c57806381890dd9146101af57600080fd5b806308de01341461013b5780631047795b146101615780632aac6066146101765780636752617414610189575b600080fd5b61014e610149366004612a45565b6102c1565b6040519081526020015b60405180910390f35b61017461016f366004612c5f565b61038c565b005b61014e610184366004612c5f565b6103ec565b61014e610197366004612cd0565b610465565b61014e6101aa366004612cd0565b61052c565b61014e6101bd366004612ce9565b6105ec565b61014e6101d0366004612cd0565b610663565b61014e6101e3366004612c5f565b610723565b61014e6101f6366004612cd0565b610789565b61014e610209366004612cd0565b610849565b61014e61021c366004612c5f565b610909565b61014e61022f366004612a45565b610961565b61014e610242366004612a45565b610a22565b61014e610255366004612ce9565b610ae3565b61014e610268366004612a45565b610b47565b61028061027b366004612d52565b610c08565b60408051938452602084019290925290820152606001610158565b61014e6102a9366004612e26565b610cd6565b61014e6102bc366004612a45565b610d3c565b600080604051806101200160405280600067ffffffffffffffff8111156102ea576102ea612a67565b60405190808252806020026020018201604052801561031d57816020015b60608152602001906001900390816103085790505b508152602001604051806040016040528060008152602001600081525081526020016000815260200160008152602001600081526020018581526020016000815260200160008152602001610370610dfd565b905290506103828185610e0d86610e17565b9150505b92915050565b60006040518061012001604052808881526020018781526020018681526020016000815260200185815260200184815260200160008152602001600081526020016103d5610dfd565b905290506103e38183610e3a565b50505050505050565b6000806040518061012001604052808981526020018881526020018781526020016000815260200160008152602001600081526020016000815260200160008152602001610438610dfd565b90529050610444610ec0565b61045081868686610ec8565b50610459610ec0565b50919695505050505050565b600080604051806101200160405280600067ffffffffffffffff81111561048e5761048e612a67565b6040519080825280602002602001820160405280156104c157816020015b60608152602001906001900390816104ac5790505b508152602001604051806040016040528060008152602001600081525081526020016000815260200160008152602001600081526020018481526020016000815260200160008152602001610514610dfd565b905290506105258184610fb7610fc0565b9392505050565b600080604051806101200160405280600067ffffffffffffffff81111561055557610555612a67565b60405190808252806020026020018201604052801561058857816020015b60608152602001906001900390816105735790505b5081526020016040518060400160405280600081526020016000815250815260200160008152602001600081526020016000815260200184815260200160008152602001600081526020016105db610dfd565b905290506105258184610fe0610fe6565b60008060405180610120016040528088815260200187815260200186815260200160008152602001600081526020018581526020016000815260200160008152602001610637610dfd565b90529050610643610ec0565b61064d8184610ff5565b610655610ec0565b60a001519695505050505050565b600080604051806101200160405280600067ffffffffffffffff81111561068c5761068c612a67565b6040519080825280602002602001820160405280156106bf57816020015b60608152602001906001900390816106aa5790505b508152602001604051806040016040528060008152602001600081525081526020016000815260200160008152602001600081526020018481526020016000815260200160008152602001610712610dfd565b90529050610525818461100a610fe6565b6000806040518061012001604052808981526020018881526020018781526020016000815260200160008152602001868152602001600081526020016000815260200161076e610dfd565b9052905061077d818585611012565b98975050505050505050565b600080604051806101200160405280600067ffffffffffffffff8111156107b2576107b2612a67565b6040519080825280602002602001820160405280156107e557816020015b60608152602001906001900390816107d05790505b508152602001604051806040016040528060008152602001600081525081526020016000815260200160008152602001600081526020018481526020016000815260200160008152602001610838610dfd565b90529050610525818461100a610fc0565b600080604051806101200160405280600067ffffffffffffffff81111561087257610872612a67565b6040519080825280602002602001820160405280156108a557816020015b60608152602001906001900390816108905790505b5081526020016040518060400160405280600081526020016000815250815260200160008152602001600081526020016000815260200184815260200160008152602001600081526020016108f8610dfd565b905290506105258184610fb7611022565b600080604051806101200160405280898152602001888152602001878152602001600081526020018681526020018581526020016000815260200160008152602001610953610dfd565b9052905061077d8184611033565b600080604051806101200160405280600067ffffffffffffffff81111561098a5761098a612a67565b6040519080825280602002602001820160405280156109bd57816020015b60608152602001906001900390816109a85790505b508152602001604051806040016040528060008152602001600081525081526020016000815260200160008152602001600081526020018581526020016000815260200160008152602001610a10610dfd565b905290506103828185610fe086611060565b600080604051806101200160405280600067ffffffffffffffff811115610a4b57610a4b612a67565b604051908082528060200260200182016040528015610a7e57816020015b6060815260200190600190039081610a695790505b508152602001604051806040016040528060008152602001600081525081526020016000815260200160008152602001600081526020018581526020016000815260200160008152602001610ad1610dfd565b90529050610382818561107086611098565b60008060405180610120016040528088815260200187815260200186815260200160008152602001600081526020018581526020016000815260200160008152602001610b2e610dfd565b90529050610b3c81846110b6565b979650505050505050565b600080604051806101200160405280600067ffffffffffffffff811115610b7057610b70612a67565b604051908082528060200260200182016040528015610ba357816020015b6060815260200190600190039081610b8e5790505b508152602001604051806040016040528060008152602001600081525081526020016000815260200160008152602001600081526020018581526020016000815260200160008152602001610bf6610dfd565b905290506103828185610fb7866110c4565b6000806000806040518061012001604052808881526020018981526020018781526020016000815260200160008152602001600081526020016000815260200160008152602001610c57610dfd565b9052905060005b8551811015610cab57610c98816000888481518110610c7f57610c7f612ea1565b602002602001015185610ec8909392919063ffffffff16565b5080610ca381612eff565b915050610c5e565b5060c081015160e082015160a083015160808401516020910304935093509350509450945094915050565b6000806040518061012001604052808a8152602001898152602001888152602001600081526020018781526020018681526020016000815260200160008152602001610d20610dfd565b90529050610d2f8185856110d3565b9998505050505050505050565b600080604051806101200160405280600067ffffffffffffffff811115610d6557610d65612a67565b604051908082528060200260200182016040528015610d9857816020015b6060815260200190600190039081610d835790505b508152602001604051806040016040528060008152602001600081525081526020016000815260200160008152602001600081526020018581526020016000815260200160008152602001610deb610dfd565b90529050610382818561100a86611060565b6060610e08816110f5565b905090565b6000949350505050565b6000610e31610e2a8686600386016110d3565b86906110b6565b95945050505050565b81608001518110158015610e5157508160a0015181105b610ebc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f535441434b5f554e444552464c4f57000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b6040516000a0565b83516020848102909101015180516000919081015b80821015610f3857600080600484019350835161ffff8116915061ffff8160101c16925050610f2f8982898c61010001518681518110610f1f57610f1f612ea1565b602002602001015163ffffffff16565b96505050610edd565b6080870151602090860304841115610fac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4d494e5f46494e414c5f535441434b00000000000000000000000000000000006044820152606401610eb3565b509295945050505050565b60009392505050565b6000610fd8610fd1858560026110d3565b85906110b6565b949350505050565b50600090565b6000610fd8610fd18585611033565b8160a00151811115610ebc5760a09190910152565b600092915050565b6020810282016105258482610ff5565b6000610fd8610fd1858560036110d3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081016103868382610e3a565b6000610e31610e2a8686856110d3565b6040805160038082526080820190925260609160208201838036833701905050949350505050565b6000610e316110ae8686600160028702016110d3565b869084611012565b602081016103868382610ff5565b6000610e31610e2a8686600286015b600081156110ed5760208202830392506110ed8484610e3a565b509092915050565b6060600060405180610720016040528061110d603890565b67ffffffffffffffff1667ffffffffffffffff1681526020016112fd815260200161130c8152602001611367815260200161139e81526020016113bb81526020016114478152602001611476815260200161157581526020016116088152602001611618815260200161162781526020016116368152602001611645815260200161161881526020016116548152602001611663815260200161167281526020016116828152602001611692815260200161169281526020016116928152602001611692815260200161169e81526020016116b681526020016116c581526020016116d481526020016116e381526020016116f281526020016117018152602001611712815260200161172f8152602001611701815260200161173e815260200161174d815260200161175c815260200161176b815260200161177b815260200161178b815260200161179b81526020016117ab81526020016117bb81526020016117cb81526020016117db81526020016117eb81526020016117fb815260200161180b815260200161181b815260200161182a81526020016118398152602001611848815260200161185781526020016118668152602001611876815260200161188681526020016118958152602001611910815250905060006112f18261191f565b90506105258185611991565b6000610fd884836119c7610fc0565b6080830151600090600780851691600386811c1691600587901c16906113338887866110d3565b608089015261134488838886610ec8565b50608088015161135690899085611012565b608090980152509495945050505050565b60e0830151600090600884901c9060ff8516906113859083836119d3565b60e087015261139486856110b6565b9695505050505050565b60008260038111156113b2576113b2612f66565b50909392505050565b60006113d5836113cb8685611033565b8691906000610ec8565b821461143d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4c4f4f505f5348494654000000000000000000000000000000000000000000006044820152606401610eb3565b610fd88483611033565b6000600f80841690600485901c16825b82811015610fac5761146c8783876000610ec8565b9450600101611457565b600060018084169084901c816114fe57608086015160209085030481106114f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f4f425f535441434b5f524541440000000000000000000000000000000000006044820152606401610eb3565b61156b565b8560400151811061156b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4f4f425f434f4e5354414e545f524541440000000000000000000000000000006044820152606401610eb3565b61139486856110b6565b602083015151600090831080159061159857506020808501519081015190510183105b6115fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4f4f425f53544f524147455f52454144000000000000000000000000000000006044820152606401610eb3565b610fd884836110b6565b6000610fd88483611abb86611060565b6000610fd88483611b0a610fc0565b6000610fd88483611b9f610fe6565b6000610fd88483611c10611022565b6000610fd88483611cac610fc0565b6000610fd88483611d02610fc0565b6000610fd88483611db1611022565b6000610fd88483611e0e86611098565b6000610fd88483611ec886611ed5565b6000610fd884836110b6565b6000610fd86116ad8584611033565b85906008611012565b6000610fd88483611ee2610fe6565b6000610fd88483611eee610fc0565b6000610fd88483611f04610fc0565b6000610fd88483611f1a610fe6565b6000610fd88483611f26610fe6565b6000612a3b610e3185848387611060565b6000610fd882611f32611726866001612f95565b87929190611098565b6000610fd88483611f42610fc0565b6000610fd88483611f4c610fc0565b6000610fd88483611f56610fe6565b6000610fd88483611f5f610fc0565b6000610fd88483611f6986611060565b6000610fd88483611fa486611060565b6000610fd88483611fd586611060565b6000610fd88483611feb86611060565b6000610fd88483611ff786611060565b6000610fd8848361200386611060565b6000610fd8848361200f86611060565b6000610fd8848361202586611060565b6000610fd8848361203486611060565b6000610fd8848361204086611060565b6000610fd8848361204c86611060565b6000610fd88483612058610fe6565b6000610fd884836120a5610fe6565b6000610fd88483612132610fe6565b6000610fd884836121b4610fe6565b6000610fd88483612201610fe6565b6000610fd8848361224e866110c4565b6000610fd884836122a586610e17565b6000610fd8848361233f610fc0565b6000601f831680611902576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4241445f4f504552414e440000000000000000000000000000000000000000006044820152606401610eb3565b610e31610e2a8685846110d3565b6000610fd8848361239e610fc0565b8051819060381461198c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4241445f44594e414d49435f4c454e47544800000000000000000000000000006044820152606401610eb3565b919050565b6040518251825160208083028601018311156119ac57600080fd5b6020810283016040520183526119c282826123b6565b505050565b600061052583836123ca565b6000828260108210611a41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f4f425f434f4c554d4e000000000000000000000000000000000000000000006044820152606401610eb3565b60108110611aab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f4f4f425f524f57000000000000000000000000000000000000000000000000006044820152606401610eb3565b60016010860285011b8617611394565b600081604051602001611ace9190612fa8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152600091908416906370a08231906024015b602060405180830381865afa158015611b7b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190612fde565b60008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103869190612fde565b6040517f4ee2cd7e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905260009190851690634ee2cd7e906044015b602060405180830381865afa158015611c88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd89190612fde565b6040517f981b24d00000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063981b24d090602401611b5e565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff841690636352211e90602401602060405180830381865afa158015611d70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d949190612ff7565b73ffffffffffffffffffffffffffffffffffffffff169392505050565b6040517efdd58e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390526000919085169062fdd58e90604401611c6b565b6040517f4e1273f400000000000000000000000000000000000000000000000000000000815260609073ffffffffffffffffffffffffffffffffffffffff851690634e1273f490611e659086908690600401613068565b600060405180830381865afa158015611e82573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610fd891908101906130cb565b80611ed257600080fd5b50565b6000610e318585846110d3565b600061052582846125a1565b6000610fd882611efe85876125a1565b90612621565b6000610fd882611f1485876125a1565b90612636565b6000610525828461264b565b6000610525828461269a565b6060600084116110ed5781610fd8565b6000818314610525565b6000818311610525565b60008115610386565b6000818310610525565b6000828201838110611f7b5780610382565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9392505050565b600082600003611fb657506000610386565b82820282848281611fc957611fc9612f37565b0403611f7b5780610382565b6000818311611fe5576000610525565b50900390565b60006105258284612f95565b60006105258284613151565b60006105258284613285565b600081831161201e5781610525565b5090919050565b600081831061201e5781610525565b60006105258284613291565b600061052582846132a5565b600061052582846132bc565b60008173ffffffffffffffffffffffffffffffffffffffff1663ec14b06e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bec573d6000803e3d6000fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121169190612ff7565b73ffffffffffffffffffffffffffffffffffffffff1692915050565b60008173ffffffffffffffffffffffffffffffffffffffff1663f9020e336040518163ffffffff1660e01b8152600401602060405180830381865afa15801561217f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121a391906132cf565b600381111561038657610386612f66565b60008173ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120f2573d6000803e3d6000fd5b60008173ffffffffffffffffffffffffffffffffffffffff166347e4bbb96040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bec573d6000803e3d6000fd5b6040517f88d6860400000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906388d6860490611c6b90869086906004016132f0565b6040517fcaa0eb3b00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff86169063caa0eb3b906122fe9087908790879060040161331f565b602060405180830381865afa15801561231b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e319190612fde565b60008060015b6008811161239657600061235986836126f7565b9050600061236786846126f7565b905060006123758383611fd5565b90506123858560018603836127a7565b945050600190920191506123459050565b509392505050565b6000610fd88385600f16600487901c600f1685612830565b60006020830190506119c2818385516128d6565b60008060008473ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561241a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243e919061336e565b50935050925050600082136124af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4d494e5f424153455f50524943450000000000000000000000000000000000006044820152606401610eb3565b836124ba82426132bc565b10612521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f5354414c455f50524943450000000000000000000000000000000000000000006044820152606401610eb3565b610e318573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561256f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259391906133be565b60ff1661259f846128fe565b905b600080826012036125b55783915050610386565b82601211156125e1575060128290036125cf81600a613285565b6125d990856132a5565b915050610386565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee820161261081600a613285565b6125d99085613151565b5092915050565b600061052583670de0b6b3a76400008461296e565b60006105258383670de0b6b3a764000061296e565b60008160000b60000361265f575081610386565b60008260000b13156126875761267682600a6133e1565b61268090846132a5565b9050610386565b60ff60008390031661261081600a613285565b600080601283036126ae5783915050610386565b82601211156126c85750601282900361261081600a613285565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee82016125cf81600a613285565b6000816008811115612765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610eb3565b82600003612776576000915061261a565b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016020021c63ffffffff1690565b6000826008811115612815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610eb3565b505063ffffffff602090920291821b199290921691901b1790565b600082600881111561289e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610eb3565b6000855b858110156128ca5763ffffffff6020820290811b199890981685891b179791506001016128a2565b50959695505050505050565b8060200283015b808410156128f85783518352602093840193909201916128dd565b50505050565b60008082121561296a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152606401610eb3565b5090565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036129c6578382816129bc576129bc612f37565b0492505050610525565b8084116129d257600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b612a436133f0565b565b60008060408385031215612a5857600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612add57612add612a67565b604052919050565b600067ffffffffffffffff821115612aff57612aff612a67565b5060051b60200190565b6000601f8381840112612b1b57600080fd5b82356020612b30612b2b83612ae5565b612a96565b82815260059290921b85018101918181019087841115612b4f57600080fd5b8287015b84811015612c0457803567ffffffffffffffff80821115612b745760008081fd5b818a0191508a603f830112612b895760008081fd5b85820135604082821115612b9f57612b9f612a67565b612bce887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c85011601612a96565b92508183528c81838601011115612be55760008081fd5b8181850189850137506000908201870152845250918301918301612b53565b50979650505050505050565b600060408284031215612c2257600080fd5b6040516040810181811067ffffffffffffffff82111715612c4557612c45612a67565b604052823581526020928301359281019290925250919050565b60008060008060008060e08789031215612c7857600080fd5b863567ffffffffffffffff811115612c8f57600080fd5b612c9b89828a01612b09565b965050612cab8860208901612c10565b959895975050505060608401359360808101359360a0820135935060c0909101359150565b600060208284031215612ce257600080fd5b5035919050565b600080600080600060c08688031215612d0157600080fd5b853567ffffffffffffffff811115612d1857600080fd5b612d2488828901612b09565b955050612d348760208801612c10565b949794965050505060608301359260808101359260a0909101359150565b60008060008060a08587031215612d6857600080fd5b612d728686612c10565b9350604085013567ffffffffffffffff80821115612d8f57600080fd5b612d9b88838901612b09565b9450606087013593506080870135915080821115612db857600080fd5b508501601f81018713612dca57600080fd5b80356020612dda612b2b83612ae5565b82815260059290921b8301810191818101908a841115612df957600080fd5b938201935b83851015612e1757843582529382019390820190612dfe565b979a9699509497505050505050565b6000806000806000806000610100888a031215612e4257600080fd5b873567ffffffffffffffff811115612e5957600080fd5b612e658a828b01612b09565b975050612e758960208a01612c10565b969996985050505060608501359460808101359460a0820135945060c0820135935060e0909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f3057612f30612ed0565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8082018082111561038657610386612ed0565b815160009082906020808601845b83811015612fd257815185529382019390820190600101612fb6565b50929695505050505050565b600060208284031215612ff057600080fd5b5051919050565b60006020828403121561300957600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461052557600080fd5b600081518084526020808501945080840160005b8381101561305d57815187529582019590820190600101613041565b509495945050505050565b604080825283519082018190526000906020906060840190828701845b828110156130b757815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101613085565b50505083810382850152611394818661302d565b600060208083850312156130de57600080fd5b825167ffffffffffffffff8111156130f557600080fd5b8301601f8101851361310657600080fd5b8051613114612b2b82612ae5565b81815260059190911b8201830190838101908783111561313357600080fd5b928401925b82841015610b3c57835182529284019290840190613138565b60008261316057613160612f37565b500490565b600181815b808511156131be57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156131a4576131a4612ed0565b808516156131b157918102915b93841c939080029061316a565b509250929050565b6000826131d557506001610386565b816131e257506000610386565b81600181146131f857600281146132025761321e565b6001915050610386565b60ff84111561321357613213612ed0565b50506001821b610386565b5060208310610133831016604e8410600b8410161715613241575081810a610386565b61324b8383613165565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561327d5761327d612ed0565b029392505050565b600061052583836131c6565b6000826132a0576132a0612f37565b500690565b808202811582820484141761038657610386612ed0565b8181038181111561038657610386612ed0565b6000602082840312156132e157600080fd5b81516004811061052557600080fd5b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000610fd8604083018461302d565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000610e31606083018461302d565b805169ffffffffffffffffffff8116811461198c57600080fd5b600080600080600060a0868803121561338657600080fd5b61338f86613354565b94506020860151935060408601519250606086015191506133b260808701613354565b90509295509295909350565b6000602082840312156133d057600080fd5b815160ff8116811461052557600080fd5b600061052560ff8416836131c6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea26469706673582212204bda103d2c63c07ea1518310cc46ff057d6f85f16f6a3300ca20b4306e7165de64736f6c63430008110033";

type LibIntegrityStateTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibIntegrityStateTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibIntegrityStateTest__factory extends ContractFactory {
  constructor(...args: LibIntegrityStateTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibIntegrityStateTest> {
    return super.deploy(overrides || {}) as Promise<LibIntegrityStateTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibIntegrityStateTest {
    return super.attach(address) as LibIntegrityStateTest;
  }
  connect(signer: Signer): LibIntegrityStateTest__factory {
    return super.connect(signer) as LibIntegrityStateTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibIntegrityStateTestInterface {
    return new utils.Interface(_abi) as LibIntegrityStateTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibIntegrityStateTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LibIntegrityStateTest;
  }
}
