/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VerifyTier, VerifyTierInterface } from "../VerifyTier";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "verify",
        type: "address",
      },
    ],
    name: "Initialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verify_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    name: "report",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    name: "reportTimeForTier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId_",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b610c49806100ed6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806388d6860414610079578063c4d66de81461009a578063caa0eb3b146100af575b600080fd5b61006461005f36600461092c565b6100c2565b60405190151581526020015b60405180910390f35b61008c610087366004610a1c565b61015b565b604051908152602001610070565b6100ad6100a8366004610ad5565b610321565b005b61008c6100bd366004610af0565b6105b3565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f42766d3f00000000000000000000000000000000000000000000000000000000148061015557507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6033546040517f31e658a500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260009283929116906331e658a590602401606060405180830381865afa1580156101cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f39190610b8e565b603354604080517fb9bd0135000000000000000000000000000000000000000000000000000000008152835163ffffffff908116600483015260208501518116602483015291840151909116604482015242606482015291925060029173ffffffffffffffffffffffffffffffffffffffff9091169063b9bd013590608401602060405180830381865afa15801561028f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b39190610bfa565b036102f8576102f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60006008846020015163ffffffff1661074e565b915050610155565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9392505050565b600054610100900460ff16158080156103415750600054600160ff909116105b8061035b5750303b15801561035b575060005460ff166001145b6103ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561044a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6104526107f4565b73ffffffffffffffffffffffffffffffffffffffff82166104cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f305f41444452455353000000000000000000000000000000000000000000000060448201526064016103e3565b603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091556040805133815260208101929092527fdc90fed0326ba91706deeac7eb34ac9f8b680734f9d782864dc29704d23bed6a910160405180910390a180156105af57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6033546040517f31e658a500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015260009283929116906331e658a590602401606060405180830381865afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b9190610b8e565b603354604080517fb9bd0135000000000000000000000000000000000000000000000000000000008152835163ffffffff908116600483015260208501518116602483015291840151909116604482015242606482015291925060029173ffffffffffffffffffffffffffffffffffffffff9091169063b9bd013590608401602060405180830381865afa1580156106e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070b9190610bfa565b03610721576020015163ffffffff169050610746565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9150505b949350505050565b60008260088111156107bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f5449455200000000000000000000000000000000000000000000000060448201526064016103e3565b6000855b858110156107e85763ffffffff6020820290811b199890981685891b179791506001016107c0565b50959695505050505050565b600054610100900460ff1661088b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103e3565b610893610895565b565b600054610100900460ff16610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103e3565b60006020828403121561093e57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461096e57600080fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461099957600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610a1457610a1461099e565b604052919050565b60008060408385031215610a2f57600080fd5b610a3883610975565b915060208084013567ffffffffffffffff80821115610a5657600080fd5b818601915086601f830112610a6a57600080fd5b813581811115610a7c57610a7c61099e565b8060051b9150610a8d8483016109cd565b8181529183018401918481019089841115610aa757600080fd5b938501935b83851015610ac557843582529385019390850190610aac565b8096505050505050509250929050565b600060208284031215610ae757600080fd5b61096e82610975565b60008060008060608587031215610b0657600080fd5b610b0f85610975565b935060208501359250604085013567ffffffffffffffff80821115610b3357600080fd5b818701915087601f830112610b4757600080fd5b813581811115610b5657600080fd5b8860208260051b8501011115610b6b57600080fd5b95989497505060200194505050565b805163ffffffff8116811461099957600080fd5b600060608284031215610ba057600080fd5b6040516060810181811067ffffffffffffffff82111715610bc357610bc361099e565b604052610bcf83610b7a565b8152610bdd60208401610b7a565b6020820152610bee60408401610b7a565b60408201529392505050565b600060208284031215610c0c57600080fd5b505191905056fea264697066735822122067bdbf36d768cfc4cb1ca31c0b4399578a8fead7a93efc7a116f20852b29ca6664736f6c63430008110033";

type VerifyTierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyTierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyTier__factory extends ContractFactory {
  constructor(...args: VerifyTierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VerifyTier> {
    return super.deploy(overrides || {}) as Promise<VerifyTier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VerifyTier {
    return super.attach(address) as VerifyTier;
  }
  connect(signer: Signer): VerifyTier__factory {
    return super.connect(signer) as VerifyTier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyTierInterface {
    return new utils.Interface(_abi) as VerifyTierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyTier {
    return new Contract(address, _abi, signerOrProvider) as VerifyTier;
  }
}
