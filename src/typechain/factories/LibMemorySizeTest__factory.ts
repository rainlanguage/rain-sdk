/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LibMemorySizeTest,
  LibMemorySizeTestInterface,
} from "../LibMemorySizeTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytes_",
        type: "bytes",
      },
    ],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "values_",
        type: "uint256[]",
      },
    ],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
    ],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102e3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631c5ee10c14610046578063852136fb1461006b57806385edea131461007e575b600080fd5b61005961005436600461013b565b610091565b60405190815260200160405180910390f35b6100596100793660046101ee565b6100a4565b61005961008c366004610294565b6100b4565b600061009e825160200190565b92915050565b600061009e825160209081020190565b6000602061009e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610133576101336100bd565b604052919050565b6000602080838503121561014e57600080fd5b823567ffffffffffffffff8082111561016657600080fd5b818501915085601f83011261017a57600080fd5b81358181111561018c5761018c6100bd565b6101bc847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016100ec565b915080825286848285010111156101d257600080fd5b8084840185840137600090820190930192909252509392505050565b6000602080838503121561020157600080fd5b823567ffffffffffffffff8082111561021957600080fd5b818501915085601f83011261022d57600080fd5b81358181111561023f5761023f6100bd565b8060051b91506102508483016100ec565b818152918301840191848101908884111561026a57600080fd5b938501935b838510156102885784358252938501939085019061026f565b98975050505050505050565b6000602082840312156102a657600080fd5b503591905056fea264697066735822122027c6c4450c7f30687f337a8752d442fd1462706f46acfd2f56200262269824a464736f6c63430008110033";

type LibMemorySizeTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibMemorySizeTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibMemorySizeTest__factory extends ContractFactory {
  constructor(...args: LibMemorySizeTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibMemorySizeTest> {
    return super.deploy(overrides || {}) as Promise<LibMemorySizeTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibMemorySizeTest {
    return super.attach(address) as LibMemorySizeTest;
  }
  connect(signer: Signer): LibMemorySizeTest__factory {
    return super.connect(signer) as LibMemorySizeTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibMemorySizeTestInterface {
    return new utils.Interface(_abi) as LibMemorySizeTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibMemorySizeTest {
    return new Contract(address, _abi, signerOrProvider) as LibMemorySizeTest;
  }
}
