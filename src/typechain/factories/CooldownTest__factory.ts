/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CooldownTest, CooldownTestInterface } from "../CooldownTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cooldownDuration",
        type: "uint256",
      },
    ],
    name: "CooldownInitialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cooldown",
        type: "uint256",
      },
    ],
    name: "CooldownTriggered",
    type: "event",
  },
  {
    inputs: [],
    name: "getCooldownDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cooldownDuration_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061042f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063209652551461005157806355241077146100675780637088b0901461007c578063fe4b84df14610084575b600080fd5b6003545b60405190815260200160405180910390f35b61007a610075366004610371565b610097565b005b600054610055565b61007a610092366004610371565b61023c565b60025460009073ffffffffffffffffffffffffffffffffffffffff16156100d65760025473ffffffffffffffffffffffffffffffffffffffff16610104565b600280547fffffffffffffffffffffffff000000000000000000000000000000000000000016339081179091555b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205490915042101561019b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f434f4f4c444f574e00000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546101a9904261038a565b73ffffffffffffffffffffffffffffffffffffffff8316600081815260016020908152604091829020849055815192835282018390529192507fdd9ec76fd04aab7ee6b385c04a7bdf966620500e72b134bfc3f19654fae20f25910160405180910390a15050600355600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b61024581610248565b50565b600081116102b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f434f4f4c444f574e5f30000000000000000000000000000000000000000000006044820152606401610192565b63ffffffff811115610320576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f434f4f4c444f574e5f4d415800000000000000000000000000000000000000006044820152606401610192565b60005415610330576103306103ca565b600081905560408051338152602081018390527f6153539ba1c54ed4ef5b6f1fda4b7183eeaa1b5707c152abed56f61e09452521910160405180910390a150565b60006020828403121561038357600080fd5b5035919050565b808201808211156103c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea2646970667358221220c2be388b410fd808057f17e375c452ff7d843679a06ac14666cb173a0ceaf8fa64736f6c63430008110033";

type CooldownTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CooldownTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CooldownTest__factory extends ContractFactory {
  constructor(...args: CooldownTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CooldownTest> {
    return super.deploy(overrides || {}) as Promise<CooldownTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CooldownTest {
    return super.attach(address) as CooldownTest;
  }
  connect(signer: Signer): CooldownTest__factory {
    return super.connect(signer) as CooldownTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CooldownTestInterface {
    return new utils.Interface(_abi) as CooldownTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CooldownTest {
    return new Contract(address, _abi, signerOrProvider) as CooldownTest;
  }
}
