/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibCastTest, LibCastTestInterface } from "../LibCastTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "is_",
        type: "uint256[]",
      },
    ],
    name: "asAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "addresses_",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i_",
        type: "uint256",
      },
    ],
    name: "asEvalFunctionPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i_",
        type: "uint256",
      },
    ],
    name: "asIntegrityFunctionPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "is_",
        type: "uint256[]",
      },
    ],
    name: "asIntegrityPointers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i_",
        type: "uint256",
      },
    ],
    name: "asOpFunctionPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "is_",
        type: "uint256[]",
      },
    ],
    name: "asOpFunctionPointers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "is_",
        type: "uint256[]",
      },
    ],
    name: "asUint256ArrayIntPtrs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "is_",
        type: "uint256[]",
      },
    ],
    name: "asUint256ArrayOpPtrs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "is_",
        type: "uint256[]",
      },
    ],
    name: "asUint256ArrayUint256",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "bool_",
        type: "bool",
      },
    ],
    name: "asUint256Bool",
    outputs: [
      {
        internalType: "uint256",
        name: "i_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i_",
        type: "uint256",
      },
    ],
    name: "asUint256EvalPtr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "is_",
        type: "uint256[]",
      },
    ],
    name: "asUint256IntPtr",
    outputs: [
      {
        internalType: "uint256",
        name: "i_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "asUint256Uint256",
    outputs: [
      {
        internalType: "uint256",
        name: "i_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610527806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063ab5c27351161008c578063e278e9f111610066578063e278e9f11461013a578063e85d760114610112578063e98be7a814610199578063f443c3f41461019957600080fd5b8063ab5c273514610168578063ad4d61511461017b578063afc06d891461013a57600080fd5b806357dacdba116100bd57806357dacdba1461012757806364e9f50a1461013a578063813fd1e21461014857600080fd5b80631b4bff4e146100e45780633d61f63f1461010a578063463c162014610112575b600080fd5b6100f76100f2366004610284565b6101ac565b6040519081526020015b60405180910390f35b6100f76101c2565b6101256101203660046102cc565b6101d6565b005b6100f76101353660046103a8565b6101e9565b610125610120366004610284565b61015b6101563660046102cc565b610204565b60405161010191906103d1565b6100f76101763660046102cc565b61024b565b61018c6101893660046102cc565b90565b6040516101019190610415565b61015b6101a73660046102cc565b610276565b60006101b661027c565b6101be61027c565b5090565b60006101cc61027c565b506101898061027c565b6101de61027c565b6101e661027c565b50565b60006101f361027c565b815b90506101ff61027c565b919050565b606060005b82518110156102445761018983828151811061022757610227610463565b60209081029190910101528061023c81610492565b915050610209565b5090919050565b600061025561027c565b6101f58260008151811061026b5761026b610463565b602002602001015190565b60606101b65b6040516000a0565b60006020828403121561029657600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208083850312156102df57600080fd5b823567ffffffffffffffff808211156102f757600080fd5b818501915085601f83011261030b57600080fd5b81358181111561031d5761031d61029d565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156103605761036061029d565b60405291825284820192508381018501918883111561037e57600080fd5b938501935b8285101561039c57843584529385019392850192610383565b98975050505050505050565b6000602082840312156103ba57600080fd5b813580151581146103ca57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610409578351835292840192918401916001016103ed565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561040957835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610431565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220661bdf360e0135fee7e5675c5fff42fb13680629913df25ae50cfa45b5abfff964736f6c63430008110033";

type LibCastTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibCastTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibCastTest__factory extends ContractFactory {
  constructor(...args: LibCastTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibCastTest> {
    return super.deploy(overrides || {}) as Promise<LibCastTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibCastTest {
    return super.attach(address) as LibCastTest;
  }
  connect(signer: Signer): LibCastTest__factory {
    return super.connect(signer) as LibCastTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibCastTestInterface {
    return new utils.Interface(_abi) as LibCastTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibCastTest {
    return new Contract(address, _abi, signerOrProvider) as LibCastTest;
  }
}
