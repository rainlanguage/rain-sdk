/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  RainInterpreterIntegrity,
  RainInterpreterIntegrityInterface,
} from "../RainInterpreterIntegrity";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "finalStacks_",
        type: "uint256[]",
      },
    ],
    name: "ensureIntegrity",
    outputs: [
      {
        internalType: "uint256",
        name: "scratch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "contextScratch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackLength_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class RainInterpreterIntegrity__factory {
  static readonly abi = _abi;
  static createInterface(): RainInterpreterIntegrityInterface {
    return new utils.Interface(_abi) as RainInterpreterIntegrityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RainInterpreterIntegrity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RainInterpreterIntegrity;
  }
}
