/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SeedDance, SeedDanceInterface } from "../SeedDance";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "Commitment",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "Commit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "Secret",
        name: "secret",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "Seed",
        name: "newSeed",
        type: "uint256",
      },
    ],
    name: "Reveal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "Seed",
        name: "initialSeed",
        type: "uint256",
      },
    ],
    name: "Start",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "Seed",
        name: "seed_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start_",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "baseDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxExtraTime",
            type: "uint32",
          },
        ],
        internalType: "struct TimeBound",
        name: "timeBound_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "canRevealUntil",
    outputs: [
      {
        internalType: "uint256",
        name: "until_",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061024b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80637fbc62af14610030575b600080fd5b61004361003e3660046100f1565b610055565b60405190815260200160405180910390f35b8280156100d0576000836020015163ffffffff166100b0878573ffffffffffffffffffffffffffffffffffffffff16604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b816100bd576100bd6101e6565b855163ffffffff16919006019190910190505b949350505050565b803563ffffffff811681146100ec57600080fd5b919050565b60008060008084860360a081121561010857600080fd5b853594506020860135935060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08201121561014357600080fd5b506040516040810181811067ffffffffffffffff8211171561018e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b806040525061019f604087016100d8565b81526101ad606087016100d8565b60208201529150608085013573ffffffffffffffffffffffffffffffffffffffff811681146101db57600080fd5b939692955090935050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220e03b33fcd5a7c6f956c4013810fe874cd723afdb4f3614d4e5515558eba785c664736f6c63430008110033";

type SeedDanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeedDanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SeedDance__factory extends ContractFactory {
  constructor(...args: SeedDanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeedDance> {
    return super.deploy(overrides || {}) as Promise<SeedDance>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeedDance {
    return super.attach(address) as SeedDance;
  }
  connect(signer: Signer): SeedDance__factory {
    return super.connect(signer) as SeedDance__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeedDanceInterface {
    return new utils.Interface(_abi) as SeedDanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeedDance {
    return new Contract(address, _abi, signerOrProvider) as SeedDance;
  }
}
