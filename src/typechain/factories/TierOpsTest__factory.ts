/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TierOpsTest,
  TierOpsTestInterface,
  StateConfigStruct,
} from "../TierOpsTest";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "stackLength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "argumentsLength",
            type: "uint256",
          },
        ],
        internalType: "struct StateConfig",
        name: "config_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "InvalidCodeAtRange",
    type: "error",
  },
  {
    inputs: [],
    name: "WriteError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pointer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct State",
        name: "state",
        type: "tuple",
      },
    ],
    name: "Snapshot",
    type: "event",
  },
  {
    inputs: [],
    name: "run",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "runLength",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "runState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stackIndex",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "stack",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "sources",
            type: "bytes[]",
          },
          {
            internalType: "uint256[]",
            name: "constants",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "arguments",
            type: "uint256[]",
          },
        ],
        internalType: "struct State",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002050380380620020508339810160408190526200003491620003fd565b60056080526200004e620000488262000061565b6200019b565b6001600160a01b031660a0525062000759565b620000946040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b815151620000d45760405162461bcd60e51b8152602060048201526009602482015268305f534f555243455360b81b604482015260640160405180910390fd5b6040518060a001604052806000815260200183604001516001600160401b03811115620001055762000105620002bd565b6040519080825280602002602001820160405280156200012f578160200160208202803683370190505b508152602001836000015181526020018360200151815260200183606001516001600160401b03811115620001685762000168620002bd565b60405190808252806020026020018201604052801562000192578160200160208202803683370190505b50905292915050565b600080620001d583604051602001620001b5919062000694565b6040516020818303038152906040526200021a60201b620002251760201c565b90507ff95eed63f55d96a35306669cc3b5f652f8d44552e3e4b17b2f78f13571114abd3382856040516200020c93929190620006b0565b60405180910390a192915050565b6000806200025483604051602001620002349190620006de565b6040516020818303038152906040526200028f60201b620002b01760201c565b90508051602082016000f091506001600160a01b038216620002895760405163046a55db60e11b815260040160405180910390fd5b50919050565b6060815182604051602001620002a792919062000706565b6040516020818303038152906040529050919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715620002f857620002f8620002bd565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620003295762000329620002bd565b604052919050565b60006001600160401b038211156200034d576200034d620002bd565b5060051b60200190565b60005b83811015620003745781810151838201526020016200035a565b8381111562000384576000848401525b50505050565b600082601f8301126200039c57600080fd5b81516020620003b5620003af8362000331565b620002fe565b82815260059290921b84018101918181019086841115620003d557600080fd5b8286015b84811015620003f25780518352918301918301620003d9565b509695505050505050565b600060208083850312156200041157600080fd5b82516001600160401b03808211156200042957600080fd5b90840190608082870312156200043e57600080fd5b62000448620002d3565b8251828111156200045857600080fd5b8301601f810188136200046a57600080fd5b80516200047b620003af8262000331565b81815260059190911b8201860190868101908a8311156200049b57600080fd5b8784015b838110156200053157805187811115620004b95760008081fd5b8501603f81018d13620004cc5760008081fd5b89810151604089821115620004e557620004e5620002bd565b620004f9601f8301601f19168d01620002fe565b8281528f828486010111156200050f5760008081fd5b62000520838e830184870162000357565b86525050509188019188016200049f565b50845250505082840151828111156200054957600080fd5b62000557888286016200038a565b858301525060408301516040820152606083015160608201528094505050505092915050565b600081518084526020808501945080840160005b83811015620005af5781518752958201959082019060010162000591565b509495945050505050565b80518252600060208083015160a082860152620005db60a08601826200057d565b9050604084015185820360408701528181518084528484019150848160051b850101858401935060005b828110156200064f57601f19808784030185528551805180855262000630818b87018c850162000357565b9689019695890195601f01909116929092018701915060010162000605565b506060880151955088810360608a01526200066b81876200057d565b95505050505050608083015184820360808601526200068b82826200057d565b95945050505050565b602081526000620006a96020830184620005ba565b9392505050565b6001600160a01b038481168252831660208201526060604082018190526000906200068b90830184620005ba565b6000815260008251620006f981600185016020870162000357565b9190910160010192915050565b606360f81b815260e083901b6001600160e01b03191660018201526880600e6000396000f360b81b600582015281516000906200074b81600e85016020870162000357565b91909101600e019392505050565b60805160a0516118d26200077e600039600060d3015260006107e501526118d26000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806345c6a7a6146100465780635ab47a0114610064578063c040622614610084575b600080fd5b61004e61009a565b60405161005b9190611290565b60405180910390f35b610077610072366004611375565b610119565b60405161005b919061138e565b61008c6101e4565b60405190815260200161005b565b6100cc6040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b60006100f77f00000000000000000000000000000000000000000000000000000000000000006102dc565b905061011460405180602001604052806000815250826000610330565b919050565b6060600061012561009a565b905060008367ffffffffffffffff811115610142576101426113d2565b60405190808252806020026020018201604052801561016b578160200160208202803683370190505b50905060005b848110156101dc5760208301518351829061018d908890611430565b6101979190611447565b815181106101a7576101a761145f565b60200260200101518282815181106101c1576101c161145f565b60209081029190910101526101d58161148e565b9050610171565b509392505050565b6000806101ef61009a565b90508060200151600182600001516102079190611430565b815181106102175761021761145f565b602002602001015191505090565b6000806102508360405160200161023c91906114c7565b6040516020818303038152906040526102b0565b90508051602082016000f0915073ffffffffffffffffffffffffffffffffffffffff82166102aa576040517f08d4abb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50919050565b60608151826040516020016102c69291906114ed565b6040516020818303038152906040529050919050565b61030e6040518060a0016040528060008152602001606081526020016060815260200160608152602001606081525090565b610317826105b9565b80602001905181019061032a919061178d565b92915050565b602082015151825111156103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f535441434b5f4f564552464c4f5700000000000000000000000000000000000060448201526064015b60405180910390fd5b602082810151604084015183830201909101516060840151608085015182516000948594859492939092915b848810156105ac576002880197508784015180601e1a975080601f1a965050600587101561052b57600187141561044357816080871661040e5750825b607f87168151811061041f57600080fd5b8b516020820260200183015160208202602001850152600181018d52505050610537565b600287141561047a57895180871061045a57600080fd5b6020870260200182015160208202602001830152600181018b5250610537565b60038714156104935761048e8b8b886105e7565b610537565b60048714156104c45761048e8a6040516020016104b09190611290565b60405160208183030381529060405261074d565b8661048e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f534b49505f52454d4f5645440000000000000000000000000000000000000000604482015260640161039c565b6105378b8b89896107df565b60208a0151518a5111156105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f535441434b5f4f564552464c4f57000000000000000000000000000000000000604482015260640161039c565b6103d1565b5050505050505050505050565b606061032a8260017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610812565b81517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600583901c918290030183526007821690610100600384811c1681901c91908290039060010160008167ffffffffffffffff81111561064b5761064b6113d2565b604051908082528060200260200182016040528015610674578160200160208202803683370190505b50905060005b828110156106cb578760200151818960000151018151811061069e5761069e61145f565b60200260200101518282815181106106b8576106b861145f565b602090810291909101015260010161067a565b5060005b6101008110156107425760005b8381101561072f57848286038483815181106106fa576106fa61145f565b6020026020010151901b901c8960800151828151811061071c5761071c61145f565b60209081029190910101526001016106dc565b5061073b898988610330565b84016106cf565b505050505050505050565b6107dc816040516024016107619190611870565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0be77f56000000000000000000000000000000000000000000000000000000001790526108fb565b50565b61080c837f000000000000000000000000000000000000000000000000000000000000000084038361091c565b50505050565b6060833b806108315750506040805160208101909152600081526108f4565b8084111561084f5750506040805160208101909152600081526108f4565b8383101561089a576040517f2c4a89fa00000000000000000000000000000000000000000000000000000000815260048101829052602481018590526044810184905260640161039c565b83830384820360008282106108af57826108b1565b815b60408051603f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101909152818152955090508087602087018a3c505050505b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60068210610986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4d41585f4f50434f444500000000000000000000000000000000000000000000604482015260640161039c565b600082610ad5575082517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018452602084015180517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe90920191829081106109f1576109f161145f565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663e053ea3185602001518360010181518110610a2d57610a2d61145f565b60200260200101516040518263ffffffff1660e01b8152600401610a6d919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b602060405180830381865afa158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190611883565b84602001518281518110610ac457610ac461145f565b60200260200101818152505061080c565b6001831415610b30577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8460200151856000015181518110610b1957610b1961145f565b60209081029190910101528351600101845261080c565b6002831415610b555760008460200151856000015181518110610b1957610b1961145f565b6003831415610c09575082517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01808452602084015180516000919083908110610ba157610ba161145f565b60200260200101519050600085602001518360010181518110610bc657610bc661145f565b60200260200101519050610bda8282610e17565b86602001518481518110610bf057610bf061145f565b602090810291909101015250508351600101845261080c565b6004831415610cd1575082517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0180845260208401518051600f80851692600486901c909116916000919085908110610c6457610c6461145f565b60200260200101519050600087602001518560010181518110610c8957610c8961145f565b60200260200101519050610c9f82858584610e6e565b88602001518681518110610cb557610cb561145f565b60209081029190910101525050855160010186525061080c9050565b600583141561080c575082517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff601f8316918290030180855290600783901c906003600585901c16908360008267ffffffffffffffff811115610d3657610d366113d2565b604051908082528060200260200182016040528015610d5f578160200160208202803683370190505b50905060005b83811015610db45789602001518381518110610d8357610d8361145f565b6020026020010151828281518110610d9d57610d9d61145f565b602090810291909101015260019283019201610d65565b50600089602001518381518110610dcd57610dcd61145f565b60200260200101519050610de382828888610f14565b8a602001518881518110610df957610df961145f565b60209081029190910101525050875160010188525050505050505050565b60008060015b600881116101dc576000610e318683611064565b90506000610e3f8684611064565b90506000610e4d8383611119565b9050610e5d85600186038361112f565b94505060019092019150610e1d9050565b6000826008811115610edc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f54494552000000000000000000000000000000000000000000000000604482015260640161039c565b6000855b85811015610f085763ffffffff6020820290811b199890981685891b17979150600101610ee0565b50959695505050505050565b835160009081908190819060015b6008811161105657600092508287610f5b57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f5f565b5060005b60005b8381101561101457610f8d8c8281518110610f7f57610f7f61145f565b602002602001015184611064565b95508a8611610fdf5788610fac57610fa586836111b9565b9150610fd6565b6001891415610fbf57610fa586836111cf565b600289148015610fcd575084155b15610fd6578591505b6001945061100c565b8961100c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9150611014565b600101610f62565b508361103d57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b61104b86600184038361112f565b955050600101610f22565b509298975050505050505050565b60008160088111156110d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f54494552000000000000000000000000000000000000000000000000604482015260640161039c565b826110e05760009150611112565b63ffffffff60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85010285901c1691505b5092915050565b60008183116111295760006108f4565b50900390565b600082600881111561119d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f54494552000000000000000000000000000000000000000000000000604482015260640161039c565b505060209190910290811b63ffffffff90911b19919091161790565b60008183106111c857816108f4565b5090919050565b6000818310156111c857816108f4565b600081518084526020808501945080840160005b8381101561120f578151875295820195908201906001016111f3565b509495945050505050565b60005b8381101561123557818101518382015260200161121d565b8381111561080c5750506000910152565b6000815180845261125e81602086016020860161121a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600060208083528351818401528084015160a060408501526112b560c08501826111df565b905060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808684030160608701528282518085528585019150858160051b860101868501945060005b8281101561132e578487830301845261131c828751611246565b95880195938801939150600101611302565b5060608a01519650838982030160808a015261134a81886111df565b965050505060808701519250808685030160a0870152505061136c82826111df565b95945050505050565b60006020828403121561138757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156113c6578351835292840192918401916001016113aa565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561144257611442611401565b500390565b6000821982111561145a5761145a611401565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114c0576114c0611401565b5060010190565b60008152600082516114e081600185016020870161121a565b9190910160010192915050565b7f630000000000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008360e01b1660018201527f80600e6000396000f3000000000000000000000000000000000000000000000060058201526000825161157681600e85016020870161121a565b91909101600e019392505050565b60405160a0810167ffffffffffffffff811182821017156115a7576115a76113d2565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156115f4576115f46113d2565b604052919050565b600067ffffffffffffffff821115611616576116166113d2565b5060051b60200190565b600082601f83011261163157600080fd5b81516020611646611641836115fc565b6115ad565b82815260059290921b8401810191818101908684111561166557600080fd5b8286015b848110156116805780518352918301918301611669565b509695505050505050565b6000601f838184011261169d57600080fd5b825160206116ad611641836115fc565b82815260059290921b850181019181810190878411156116cc57600080fd5b8287015b8481101561178157805167ffffffffffffffff808211156116f15760008081fd5b818a0191508a603f8301126117065760008081fd5b8582015160408282111561171c5761171c6113d2565b61174b887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c850116016115ad565b92508183528c818386010111156117625760008081fd5b6117718289850183870161121a565b50508452509183019183016116d0565b50979650505050505050565b60006020828403121561179f57600080fd5b815167ffffffffffffffff808211156117b757600080fd5b9083019060a082860312156117cb57600080fd5b6117d3611584565b825181526020830151828111156117e957600080fd5b6117f587828601611620565b60208301525060408301518281111561180d57600080fd5b6118198782860161168b565b60408301525060608301518281111561183157600080fd5b61183d87828601611620565b60608301525060808301518281111561185557600080fd5b61186187828601611620565b60808301525095945050505050565b6020815260006108f46020830184611246565b60006020828403121561189557600080fd5b505191905056fea26469706673582212209d4aa340a55aa080f2035f38c4c8b6f16a98588866f2f68a5ec489190b00ce7b64736f6c634300080a0033";

type TierOpsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TierOpsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TierOpsTest__factory extends ContractFactory {
  constructor(...args: TierOpsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TierOpsTest> {
    return super.deploy(config_, overrides || {}) as Promise<TierOpsTest>;
  }
  getDeployTransaction(
    config_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(config_, overrides || {});
  }
  attach(address: string): TierOpsTest {
    return super.attach(address) as TierOpsTest;
  }
  connect(signer: Signer): TierOpsTest__factory {
    return super.connect(signer) as TierOpsTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TierOpsTestInterface {
    return new utils.Interface(_abi) as TierOpsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TierOpsTest {
    return new Contract(address, _abi, signerOrProvider) as TierOpsTest;
  }
}
