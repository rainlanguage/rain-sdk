/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NoticeBoard, NoticeBoardInterface } from "../NoticeBoard";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "subject",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct Notice",
        name: "notice",
        type: "tuple",
      },
    ],
    name: "NewNotice",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "subject",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Notice[]",
        name: "notices_",
        type: "tuple[]",
      },
    ],
    name: "createNotices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610340806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806376d6500014610030575b600080fd5b61004361003e3660046100c3565b610045565b005b60005b818110156100be577faa4518b627c102261dfb05cfe2e978716392d85d3ba1a5fbeb7a0da1ca9d0c3f3384848481811061008457610084610138565b90506020028101906100969190610167565b6040516100a49291906101ee565b60405180910390a1806100b6816102ab565b915050610048565b505050565b600080602083850312156100d657600080fd5b823567ffffffffffffffff808211156100ee57600080fd5b818501915085601f83011261010257600080fd5b81358181111561011157600080fd5b8660208260051b850101111561012657600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261019b57600080fd5b9190910192915050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff8085168352604060208401528335818116915081811461022457600080fd5b5060408301526020830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261026057600080fd5b830160208101903567ffffffffffffffff81111561027d57600080fd5b80360382131561028c57600080fd5b604060608501526102a16080850182846101a5565b9695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610303577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220827f291ebbfe9605bc48e82744949c0039f2b81af4bd93f5c847ba557da2df6264736f6c63430008110033";

type NoticeBoardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NoticeBoardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NoticeBoard__factory extends ContractFactory {
  constructor(...args: NoticeBoardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NoticeBoard> {
    return super.deploy(overrides || {}) as Promise<NoticeBoard>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NoticeBoard {
    return super.attach(address) as NoticeBoard;
  }
  connect(signer: Signer): NoticeBoard__factory {
    return super.connect(signer) as NoticeBoard__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NoticeBoardInterface {
    return new utils.Interface(_abi) as NoticeBoardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NoticeBoard {
    return new Contract(address, _abi, signerOrProvider) as NoticeBoard;
  }
}
