/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SeedDanceTest, SeedDanceTestInterface } from "../SeedDanceTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "Commitment",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "Commit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "Secret",
        name: "secret",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "Seed",
        name: "newSeed",
        type: "uint256",
      },
    ],
    name: "Reveal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "Seed",
        name: "initialSeed",
        type: "uint256",
      },
    ],
    name: "Start",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "Seed",
        name: "seed_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start_",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "baseDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxExtraTime",
            type: "uint32",
          },
        ],
        internalType: "struct TimeBound",
        name: "timeBound_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "canRevealUntil",
    outputs: [
      {
        internalType: "uint256",
        name: "until_",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Commitment",
        name: "commitment_",
        type: "uint256",
      },
    ],
    name: "commit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "baseDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxExtraTime",
            type: "uint32",
          },
        ],
        internalType: "struct TimeBound",
        name: "timeBound_",
        type: "tuple",
      },
      {
        internalType: "Secret",
        name: "secret_",
        type: "uint256",
      },
    ],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sharedSeed",
    outputs: [
      {
        internalType: "Seed",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "Seed",
        name: "initialSeed_",
        type: "uint256",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106be806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806395805dad1161005057806395805dad146100a657806398d4e2e9146100b9578063f4f98ad5146100c157600080fd5b8063453024871461006c5780637fbc62af14610081575b600080fd5b61007f61007a3660046105b3565b6100d4565b005b61009461008f3660046105de565b6100e2565b60405190815260200160405180910390f35b61007f6100b4366004610640565b610165565b600054610094565b61007f6100cf366004610640565b610171565b6100de828261017a565b5050565b82801561015d576000836020015163ffffffff1661013d878573ffffffffffffffffffffffffffffffffffffffff16604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b8161014a5761014a610659565b855163ffffffff16919006019190910190505b949350505050565b61016e8161030c565b50565b61016e816103fd565b600054600154610192919063ffffffff1684336100e2565b421115610200576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f43414e545f52455645414c00000000000000000000000000000000000000000060448201526064015b60405180910390fd5b61022061020c826104c4565b336000908152600260205260409020541490565b610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4241445f5345435245540000000000000000000000000000000000000000000060448201526064016101f7565b3360008181526002602090815260408083208390558254815180840191909152808201869052815180820383018152606082018084528151919094012093849055939091526080830184905260a083018290525190917fbd515cb7fe6810ea1d996c4efb3231c8b281498ca8062a4ec905d41943824bdf919081900360c00190a1505050565b60015463ffffffff161561038b5760015463ffffffff16421061038b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f535441525445440000000000000000000000000000000000000000000000000060448201526064016101f7565b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000164263ffffffff16179055600081905560408051338152602081018390527fcfb9c5312b25ec7b809d61e638df25f749eae5d5c25399e1c93d1d319bfd582191015b60405180910390a150565b60015463ffffffff161561047c5760015463ffffffff16421061047c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f535441525445440000000000000000000000000000000000000000000000000060448201526064016101f7565b33600081815260026020908152604091829020849055815192835282018390527f5e1dd8c4451717d5ca4ffbefdada35e22e0871220b9ed9dd03a351f0938c5ed791016103f2565b6000816040516020016104d991815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b803563ffffffff8116811461052957600080fd5b919050565b60006040828403121561054057600080fd5b6040516040810181811067ffffffffffffffff8211171561058a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290508061059983610515565b81526105a760208401610515565b60208201525092915050565b600080606083850312156105c657600080fd5b6105d0848461052e565b946040939093013593505050565b60008060008060a085870312156105f457600080fd5b843593506020850135925061060c866040870161052e565b9150608085013573ffffffffffffffffffffffffffffffffffffffff8116811461063557600080fd5b939692955090935050565b60006020828403121561065257600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212206b494e0c66ff732b932bd59c0f9af363f136d6fb4875984d76c09f4935b0b8ee64736f6c63430008110033";

type SeedDanceTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeedDanceTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SeedDanceTest__factory extends ContractFactory {
  constructor(...args: SeedDanceTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SeedDanceTest> {
    return super.deploy(overrides || {}) as Promise<SeedDanceTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SeedDanceTest {
    return super.attach(address) as SeedDanceTest;
  }
  connect(signer: Signer): SeedDanceTest__factory {
    return super.connect(signer) as SeedDanceTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeedDanceTestInterface {
    return new utils.Interface(_abi) as SeedDanceTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeedDanceTest {
    return new Contract(address, _abi, signerOrProvider) as SeedDanceTest;
  }
}
