/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type StateConfigStruct = {
  sources: BytesLike[];
  constants: BigNumberish[];
};

export type StateConfigStructOutput = [string[], BigNumber[]] & {
  sources: string[];
  constants: BigNumber[];
};

export type StorageOpcodesRangeStruct = {
  pointer: BigNumberish;
  length: BigNumberish;
};

export type StorageOpcodesRangeStructOutput = [BigNumber, BigNumber] & {
  pointer: BigNumber;
  length: BigNumber;
};

export interface AllStandardOpsTestInterface extends utils.Interface {
  functions: {
    "initialize((bytes[],uint256[]))": FunctionFragment;
    "run()": FunctionFragment;
    "runContext(uint256[][])": FunctionFragment;
    "stack()": FunctionFragment;
    "stackTop()": FunctionFragment;
    "storageOpcodesRange()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "initialize",
    values: [StateConfigStruct]
  ): string;
  encodeFunctionData(functionFragment: "run", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "runContext",
    values: [BigNumberish[][]]
  ): string;
  encodeFunctionData(functionFragment: "stack", values?: undefined): string;
  encodeFunctionData(functionFragment: "stackTop", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "storageOpcodesRange",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "run", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "runContext", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "stack", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "stackTop", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "storageOpcodesRange",
    data: BytesLike
  ): Result;

  events: {
    "SaveInterpreterState(address,uint256,tuple)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "SaveInterpreterState"): EventFragment;
}

export type SaveInterpreterStateEvent = TypedEvent<
  [string, BigNumber, StateConfigStructOutput],
  { sender: string; id: BigNumber; config: StateConfigStructOutput }
>;

export type SaveInterpreterStateEventFilter =
  TypedEventFilter<SaveInterpreterStateEvent>;

export interface AllStandardOpsTest extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AllStandardOpsTestInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    initialize(
      stateConfig_: StateConfigStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    run(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    runContext(
      context_: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    stack(overrides?: CallOverrides): Promise<[BigNumber[]]>;

    stackTop(overrides?: CallOverrides): Promise<[BigNumber]>;

    storageOpcodesRange(
      overrides?: CallOverrides
    ): Promise<
      [StorageOpcodesRangeStructOutput] & {
        storageOpcodesRange_: StorageOpcodesRangeStructOutput;
      }
    >;
  };

  initialize(
    stateConfig_: StateConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  run(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  runContext(
    context_: BigNumberish[][],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  stack(overrides?: CallOverrides): Promise<BigNumber[]>;

  stackTop(overrides?: CallOverrides): Promise<BigNumber>;

  storageOpcodesRange(
    overrides?: CallOverrides
  ): Promise<StorageOpcodesRangeStructOutput>;

  callStatic: {
    initialize(
      stateConfig_: StateConfigStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    run(overrides?: CallOverrides): Promise<void>;

    runContext(
      context_: BigNumberish[][],
      overrides?: CallOverrides
    ): Promise<void>;

    stack(overrides?: CallOverrides): Promise<BigNumber[]>;

    stackTop(overrides?: CallOverrides): Promise<BigNumber>;

    storageOpcodesRange(
      overrides?: CallOverrides
    ): Promise<StorageOpcodesRangeStructOutput>;
  };

  filters: {
    "SaveInterpreterState(address,uint256,tuple)"(
      sender?: null,
      id?: null,
      config?: null
    ): SaveInterpreterStateEventFilter;
    SaveInterpreterState(
      sender?: null,
      id?: null,
      config?: null
    ): SaveInterpreterStateEventFilter;
  };

  estimateGas: {
    initialize(
      stateConfig_: StateConfigStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    run(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    runContext(
      context_: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    stack(overrides?: CallOverrides): Promise<BigNumber>;

    stackTop(overrides?: CallOverrides): Promise<BigNumber>;

    storageOpcodesRange(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    initialize(
      stateConfig_: StateConfigStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    run(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    runContext(
      context_: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    stack(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    stackTop(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    storageOpcodesRange(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
